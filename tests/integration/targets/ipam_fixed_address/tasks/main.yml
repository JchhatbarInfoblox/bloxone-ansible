---
- module_defaults:
    group/infoblox.bloxone.all:
      csp_url: "{{ csp_url }}"
      api_key: "{{ api_key }}"

  block:
    # Create a random IP space name to avoid conflicts
    - ansible.builtin.set_fact:
        name: "test-ip-space-{{ 999999 | random | string }}"
        tag_value: "site-{{ 999999 | random | string }}"

    # Basic tests for Subnet
    - name: "Create an IP space"
      infoblox.bloxone.ipam_ip_space:
        name: "{{ name }}"
        state: "present"
      register: ip_space

    - name: "Create a Subnet"
      infoblox.bloxone.ipam_subnet:
        address: "10.0.0.0/24"
        space: "{{ ip_space.id }}"
        state: "present"
      register: subnet

    - name: "Create a Fixed Address"
      infoblox.bloxone.ipam_fixed_address:
        address: "10.0.0.1"
        name: "test_fixed_address_ansible"
        match_type: "mac"
        match_value: "00:00:00:00:00:00"
        ip_space: "{{ ip_space.id }}"
        state: "present"
      register: fixed_address

    - name: Get information about the Fixed Address
      infoblox.bloxone.ipam_fixed_address_info:
        filters:
          address: "10.0.0.1"
          ip_space: "{{ ip_space.id }}"
      register: fixed_address_info

    - assert:
        that:
          - fixed_address is not failed
          - fixed_address_info.objects | length == 1
          - fixed_address_info.objects[0].id == fixed_address.id
          - fixed_address_info.objects[0].address == fixed_address.object.address

    - name: "Create a Fixed Address (idempotent)"
      infoblox.bloxone.ipam_fixed_address:
        address: "10.0.0.1"
        match_type: "mac"
        match_value: "00:00:00:00:00:00"
        ip_space: "{{ ip_space.id }}"
        state: "present"
      register: fixed_address
    - assert:
        that:
          - fixed_address is not changed
          - fixed_address is not failed

    - name: "Delete a Fixed Address"
      infoblox.bloxone.ipam_fixed_address:
        address: "10.0.0.1"
        ip_space: "{{ ip_space.id }}"
        match_type: "mac"
        match_value: "00:00:00:00:00:00"
        state: "absent"
      register: fixed_address
    - assert:
        that:
          - fixed_address is changed
          - fixed_address is not failed

    - name: Get information about the Fixed Address
      infoblox.bloxone.ipam_fixed_address_info:
        filters:
          address: "10.0.0.10"
          ip_space: "{{ ip_space.id }}"
      register: fixed_address_info
    - assert:
        that:
          - fixed_address is changed
          - fixed_address is not failed
          - fixed_address_info.objects | length == 0

    - name: "Delete a Fixed Address (idempotent)"
      infoblox.bloxone.ipam_fixed_address:
        address: "10.0.0.1"
        ip_space: "{{ ip_space.id }}"
        match_type: "mac"
        match_value: "00:00:00:00:00:00"
        state: "absent"
      register: fixed_address
    - assert:
        that:
          - fixed_address is not changed
          - fixed_address is not failed

    - name: "Create a Fixed Address with Comment"
      infoblox.bloxone.ipam_fixed_address:
        address: "10.0.0.2"
        ip_space: "{{ ip_space.id }}"
        match_type: "mac"
        match_value: "00:00:00:00:00:01"
        comment: "test comment"
        state: "present"

      register: fixed_address_comment
    - assert:
        that:
          - fixed_address_comment is changed
          - fixed_address_comment is not failed
          - fixed_address_comment.object.comment == "test comment"
          - fixed_address_comment.object.address == "10.0.0.2"
          - fixed_address_comment.object.match_type == "mac"
          - fixed_address_comment.object.match_value == "00:00:00:00:00:01"
          - fixed_address_comment.object.ip_space == ip_space.id

    - name: "Delete a Fixed Address with Comment"
      infoblox.bloxone.ipam_fixed_address:
        address: "10.0.0.2"
        ip_space: "{{ ip_space.id }}"
        match_type: "mac"
        match_value: "00:00:00:00:00:01"
        state: "absent"

    - name: "Create a Fixed Address with disable dhcp"
      infoblox.bloxone.ipam_fixed_address:
        address: "10.0.0.2"
        ip_space: "{{ ip_space.id }}"
        match_type: "mac"
        match_value: "00:00:00:00:00:01"
        comment: "test comment"
        disable_dhcp: true
        state: "present"

      register: fixed_address_disable_dhcp
    - assert:
        that:
          - fixed_address_disable_dhcp is changed
          - fixed_address_disable_dhcp is not failed
          - fixed_address_disable_dhcp.object.comment == "test comment"
          - fixed_address_disable_dhcp.object.address == "10.0.0.2"
          - fixed_address_disable_dhcp.object.match_type == "mac"
          - fixed_address_disable_dhcp.object.match_value == "00:00:00:00:00:01"
          - fixed_address_disable_dhcp.object.ip_space == ip_space.id
          - fixed_address_disable_dhcp.object.disable_dhcp == true

    - name: "Delete a Fixed Address with disable dhcp"
      infoblox.bloxone.ipam_fixed_address:
        address: "10.0.0.2"
        ip_space: "{{ ip_space.id }}"
        match_type: "mac"
        match_value: "00:00:00:00:00:01"
        state: "absent"

    - name: "Create a Fixed Address with host name"
      infoblox.bloxone.ipam_fixed_address:
        address: "10.0.0.2"
        ip_space: "{{ ip_space.id }}"
        match_type: "mac"
        match_value: "00:00:00:00:00:01"
        comment: "test comment"
        disable_dhcp: true
        hostname: "test-host-name"
        state: "present"
      register: fixed_address_hostname
    - assert:
        that:
          - fixed_address_hostname is changed
          - fixed_address_hostname is not failed
          - fixed_address_hostname.object.comment == "test comment"
          - fixed_address_hostname.object.address == "10.0.0.2"
          - fixed_address_hostname.object.match_type == "mac"
          - fixed_address_hostname.object.match_value == "00:00:00:00:00:01"
          - fixed_address_hostname.object.ip_space == ip_space.id
          - fixed_address_hostname.object.disable_dhcp == true
          - fixed_address_hostname.object.hostname == "test-host-name"

    - name: "Delete a Fixed Address with host name"
      infoblox.bloxone.ipam_fixed_address:
        address: "10.0.0.2"
        ip_space: "{{ ip_space.id }}"
        match_type: "mac"
        match_value: "00:00:00:00:00:01"
        state: "absent"

  always:
    - name: "Delete Fixed Address"
      infoblox.bloxone.ipam_fixed_address:
        address: "10.0.0.1"
        ip_space: "{{ ip_space.id }}"
        match_type: "mac"
        match_value: "00:00:00:00:00:00"
        state: "present"
      ignore_errors: true

    - name: "Delete Subnet"
      infoblox.bloxone.ipam_subnet:
        address: "10.0.0.0/24"
        space: "{{ ip_space.id }}"
        state: "absent"
      ignore_errors: true

    - name: "Delete IP Space"
      infoblox.bloxone.ipam_ip_space:
       name: "{{ name }}"
       state: "absent"
      ignore_errors: true
